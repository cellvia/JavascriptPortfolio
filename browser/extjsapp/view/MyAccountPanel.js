/*
 * File: app/view/MyAccountPanel.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.MyAccountPanel', {
    extend: 'Ext.panel.Panel',

    cls: 'myAccount-panel',
    id: 'ViewEventPanel',
    preventHeader: true,
    title: 'AddFundil',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'container',
                    id: 'userStatsContainer',
                    items: [
                        {
                            xtype: 'container',
                            id: 'userContainer',
                            items: [
                                {
                                    xtype: 'component',
                                    id: 'userImg',
                                    renderTpl: [
                                        '<span><img src="http://profile.ak.fbcdn.net/hprofile-ak-ash4/276216_18405448_438829519_n.jpg"/></span>'
                                    ]
                                },
                                {
                                    xtype: 'component',
                                    id: 'userName',
                                    renderTpl: [
                                        '{[FundilioUser.email]}'
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'container',
                            id: 'completeEventsContainer',
                            items: [
                                {
                                    xtype: 'component',
                                    id: 'completeEvents',
                                    renderTpl: [
                                        '<span class="larger">{[FundilioUser.completeEvents]}</span> events held'
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'container',
                            id: 'friendsInvitedContainer',
                            items: [
                                {
                                    xtype: 'component',
                                    id: 'friendsInvited',
                                    renderTpl: [
                                        '<span class="larger">{[FundilioUser.friendsInvited]}</span> friends invited'
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    xtype: 'dataview',
                    id: 'myCreatedEvents',
                    tpl: [
                        '<tpl for=".">',
                        '  <div class="eventRoot">',
                        '      <img class="eventPic" src="resources/images/loginBackground.jpg">',
                        '      <div class="eventSummary">',
                        '            <div class="eventTitle">',
                        '                {title}',
                        '            </div>',
                        '            <div class="x-component wrapped x-component-default" style="display: none;">',
                        '            </div>',
                        '            <div class="eventDate">',
                        '                {friendlyDate}',
                        '            </div>',
                        '            <div class="eventStartTime">',
                        '                {startTime}',
                        '            </div>',
                        '            <div class="eventLocation">',
                        '                {location}',
                        '            </div>',
                        '            <div class="eventDescription">',
                        '                {description}',
                        '            </div>',
                        '            <div class="eventItems">',
                        '                {items}',
                        '            </div>',
                        '            <div class="eventFunding">',
                        '                Guest funding limit: $15.00',
                        '            </div>',
                        '      </div>',
                        '      <div class="eventMeta">',
                        '          <div class="contributed"><span class="larger">${contributedTotal}</span> raised</div>',
                        '          <img class="contributedArrow" src="resources/images/contributedArrow.png" />',
                        '            <tpl if="status == &quot;complete&quot;">',
                        '                <div class="status">COMPLETE</div>',
                        '            </tpl>',
                        '            <tpl if="status == &quot;active&quot;">',
                        '                <div class="status">NOW FUNDING</div>',
                        '            </tpl>',
                        '            <tpl if="status == &quot;new&quot;">',
                        '                <div class="status">UNSENT</div>',
                        '            </tpl>',
                        '          <div class="eventControls">',
                        '            <tpl if="status != &quot;complete&quot;">',
                        '                <span class="eventButton loadEvent">EDIT</span><span class="eventButton deleteEvent">DELETE</span>',
                        '            </tpl>',
                        '          </div>',
                        '      </div>',
                        '  </div>',
                        '</tpl>'
                    ],
                    autoScroll: false,
                    itemSelector: 'div.eventRoot',
                    store: 'userEvents',
                    listeners: {
                        itemclick: {
                            fn: me.onMyCreatedEventsItemClick,
                            scope: me
                        }
                    }
                }
            ]
        });

        me.callParent(arguments);
    },

    onMyCreatedEventsItemClick: function(dataview, record, item, index, e, options) {
        var me = Ext.create(MyApp.controller.MainController);
        var self = Ext.get(e.target);
        if(self.hasCls('deleteEvent'))
        deleteEvent(self, record);
        if(self.hasCls('loadEvent'))
        loadEvent(record);

        function deleteEvent(self, record){
            if( confirm("Are you sure you want to delete this event: " + record.data.title) ){        
                self.parent('.eventRoot').hide();
                var conn = new Ext.data.Connection();
                conn.request({
                    method: 'POST',
                    url: '/deleteEvent',
                    params: {
                        eventId:  record.data.id
                    },
                    success: function(responseObject) { 
                        if( FundilioUser.loadedEvent && record.data.id === FundilioUser.loadedEvent.id ) delete FundilioUser.loadedEvent;
                        var newData = Ext.decode(responseObject.responseText);
                        if(!me.handleErrors(newData)){
                            self.parent('.eventRoot').remove();
                        }
                    },
                    failure: function(err) { self.parent('.eventRoot').show(); }
                });    
            }
        }

        function loadEvent(record){
            FundilioUser.loadedEvent = record.data;
            me.refreshWorkArea('EventPanel1');
            /*var conn = new Ext.data.Connection();
            conn.request({
            method: 'POST',
            url: '/loadEvent',
            params: {
            eventId:  record.data.id
            }
            });    */
        }
    }

});